@startuml EstimaDevClassDiagram

!define DOMAIN class
!define APPLICATION class
!define API class
!define PERSISTENCE class
!define ENUM enum

title EstimaDev - Diagrama de Classes

DOMAIN Usuario {
  +Id: int
  Nome: string
  Email: string
  ...
}

DOMAIN Cargo {
  +Id: int
  Nome: string
  ...
}

DOMAIN Projeto {
  +Id: int
  Nome: string
  ...
}

DOMAIN Tarefa {
  +Id: int
  Titulo: string
  ...
}

ENUM Status {
  Ativo
  Inativo
  ...
}

DOMAIN Historico {
  +Id: int
  Descricao: string
  Data: DateTime
  ...
}

API UsuarioController {
  +ListarTodos(): IEnumerable<Usuario>
  +BuscarPorId(id: int): Usuario
  +Criar(usuario: Usuario): void
  +Atualizar(id: int, usuario: Usuario): void
  +Excluir(id: int): void
}

API CargoController {
  +ListarTodos(): IEnumerable<Cargo>
  +BuscarPorId(id: int): Cargo
  +Criar(cargo: Cargo): void
  +Atualizar(id: int, cargo: Cargo): void
  +Excluir(id: int): void
}

API ProjetoController {
  +ListarTodos(): IEnumerable<Projeto>
  +BuscarPorId(id: int): Projeto
  +Criar(projeto: Projeto): void
  +Atualizar(id: int, projeto: Projeto): void
  +Excluir(id: int): void
}

API TarefaController {
  +ListarTodos(): IEnumerable<Tarefa>
  +BuscarPorId(id: int): Tarefa
  +Criar(tarefa: Tarefa): void
  +Atualizar(id: int, tarefa: Tarefa): void
  +Excluir(id: int): void
}

API StatusController {
  +ListarTodos(): IEnumerable<Status>
}

DOMAIN BaseEntity {
  +Id: int
  +DataCriacao: DateTime
  +DataAtualizacao: DateTime
  +DataExclusao: DateTime?
}

DOMAIN Auditoria {
  +Id: int
  Acao: string
  Entidade: string
  EntidadeId: int
  UsuarioId: int
  Data: DateTime
}

Auditoria --> BaseEntity : Herda de

@enduml


